{"version":3,"sources":["store/actions.js","components/utils/constants.js","store/api-actions.js","components/common-blocks/single-movie-card/single-movie-card.jsx","components/common-blocks/single-movie-card/single-movie.prop.js","components/common-blocks/video-card/video-card.jsx","components/common-blocks/movies-list/movies-list.jsx","components/common-blocks/button-image/button-image.jsx","components/common-blocks/logo/logo.jsx","components/common-blocks/page-footer/page-footer.jsx","store/selector/selector.js","components/common-blocks/genres-list/genres-list.jsx","components/common-blocks/show-more/show-more.jsx","components/common-blocks/auth-block/auth-block.jsx","components/pages/main-page/main-page.jsx","components/pages/sign-in/sign-in.jsx","components/pages/my-list/my-list.jsx","components/pages/not-found-page/not-found-page.jsx","components/common-blocks/movie-tabs/overview-tab.jsx","components/utils/functions.js","components/common-blocks/movie-tabs/detail-tab.jsx","components/common-blocks/movie-tabs/review-tab.jsx","components/common-blocks/movie-tabs/movie-tabs.jsx","components/pages/movie-page/movie-page.jsx","components/pages/review-page/review-form/review-form.jsx","components/pages/review-page/review-page.jsx","components/pages/player/player.jsx","components/common-blocks/loading-screen/loading-screen.jsx","components/common-blocks/private-route/private-route.jsx","components/app/app.jsx","api.js","browser-history.js","store/reducer/auth-reducer.js","store/reducer/movie-reducer.js","store/reducer/data-reducer.js","store/reducer/root-reducer.js","store/middleware/redirect.js","index.js"],"names":["ActionType","switchGenre","createAction","genre","payload","showMoreMovies","resetMoviesList","loadMoviesList","movies","updateMoviesList","movie","loadPromoMovie","loadSimilarMovie","loadMovieReview","reviews","loadFavoriteMovies","requireAuthorization","status","setUserAvatar","url","userLogout","redirectToRoute","replaceRoute","uploadReview","inProgress","UserVerdicts","NetworkErrors","FavoriteIndexes","INITIAL_GENRE","AppRoute","AuthorizationStatus","APIRoute","HttpCode","fetchSimilarMovies","id","dispatch","_getState","api","get","then","data","fetchMovieReviews","fetchFavoriteMovies","postFavoriteMovie","isPromo","post","favData","catch","err","toast","warn","error","SingleMovieCard","props","name","previewImage","onMouseHover","useDispatch","className","onMouseOver","onClick","ind","showReviewsAction","to","src","alt","width","height","PropTypes","shape","string","isRequired","number","VideoCard","playingTimeout","videoSourse","onCardHover","onCardLeave","videoRef","useRef","handleStopActiveMovie","clearTimeout","current","pause","ref","poster","setTimeout","play","onMouseLeave","muted","connect","showSimilarAction","allFilms","useState","activeMovieID","setActiveMovieID","memoizedHandleMouseHover","useCallback","handleMouseLeave","map","it","mouseOverHandler","mouseLeaveHandler","previewVideoLink","handleClick","getMovieCard","ButtonImage","xmlns","xmlnsXlink","viewBox","stroke","strokeWidth","fill","fillRule","points","clipRule","d","fillOpacity","Logo","PageFooter","getAuthorizationStatus","state","auth","authorizationStatus","getUserImage","userImage","getPromoFilm","promoFilm","getSimilarFilms","similarFilms","getReviews","getFavorites","favoriteMovies","getUserReviewUploading","reviewUploading","getAllFilms","getDataLoaded","isDataLoaded","getCurrentGenre","currentGenre","getMoviesOnPage","moviesOnPage","createGenreMovieSelector","createSelector","films","filter","createGenreSelector","Array","of","concat","arr","indexOf","slice","createShownMoviesSelector","onPage","currentGenreProp","genresProp","switchGenreAction","classNames","href","ShowMore","children","authorizationStatusStateProp","userImageStateProp","onLogoutAction","delete","localStorage","removeItem","MainPage","currentFilmsProp","useSelector","shownFilmsProp","moviesOnPageProp","promoInfo","useEffect","backgroundImage","posterImage","released","type","xlinkHref","isFavorite","length","onSubmitAction","authData","email","login","password","setItem","token","avatar_url","loginRef","passwordRef","action","onSubmit","evt","preventDefault","test","value","placeholder","htmlFor","MyList","NotFoundScreen","OverviewTab","score","currentMovie","rating","scoresCount","description","director","starring","join","DetailTab","runTime","renderReviews","comment","user","dateTime","format","date","ReviewTab","availableOptions","MoviesTabs","activeOptionIndex","setActiveOption","tabIndex","getActualTab","MoviePage","params","useParams","find","Number","style","background","backgroundColor","dumbRatingIDs","from","keys","reverse","ReviewForm","userReview","setUserReview","postReviewAction","rev","filmId","postReview","isReviewUploading","reviewState","handleUserRating","prevState","target","Fragment","onChange","disabled","renderRatingList","minLength","maxLength","isMessageValid","isRatingValid","checkValidForm","ReviewPage","Player","progressBarRef","togglerRef","HOUR","playing","elapsedTime","isLoading","playerState","setPlayerState","onloadeddata","loading","size","color","videoLink","onTimeUpdate","currentTime","duration","inSeconds","Math","floor","actualDuration","left","max","paused","fullscreen","exitFullscreen","requestFullscreen","LoadingScreen","PrivateRoute","render","path","exact","routeProps","App","isCheckedAuth","browserHistory","createBrowserHistory","initState","authReducer","changedMovie","updateMovies","newMovie","changedIndex","findIndex","newList","splice","movieReducer","camelize","dataReducer","createReducer","builder","addCase","combineReducers","redirect","_store","next","push","replace","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","request","config","getItem","headers","Promise","reject","createAPI","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","StrictMode","history","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById"],"mappings":"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","file":"static/js/main.bd9ac515.chunk.js","sourcesContent":["import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n  SWITCH_GENRE: 'data/switchGenre',\n  MORE_MOVIES: 'data/moreMovies',\n  RESET_MOVIES_LIST: 'data/resetMoviesList',\n  LOAD_MOVIES_LIST: 'data/loadMoviesList',\n  UPDATE_MOVIES_LIST: 'data/updateMoviesList',\n  LOAD_PROMO_MOVIE: 'data/loadMoviesPromo',\n  LOAD_SIMILAR_MOVIES: 'data/loadSimilarMovies',\n  LOAD_MOVIE_REVIEWS: 'data/loadReviews',\n  GET_FAVORITES: 'data/loadFavoriteMovies',\n  REQUIRED_AUTHORIZATION: 'user/requiredAuthorization',\n  LOGOUT: 'user/logout',\n  SET_USER_AVATAR: 'user/avatar',\n  REDIRECT_TO_ROUTE: 'history/redirectToRoute',\n  REPLACE_ROUTE: 'history/replaceRoute',\n  UPLOAD_REVIEW: 'data/uploadReview',\n};\n\nexport const switchGenre = createAction(ActionType.SWITCH_GENRE, (genre) => ({\n  payload: {genre},\n}));\n\nexport const showMoreMovies = createAction(ActionType.MORE_MOVIES);\n\nexport const resetMoviesList = createAction(ActionType.RESET_MOVIES_LIST);\n\nexport const loadMoviesList = createAction(ActionType.LOAD_MOVIES_LIST, (movies) => ({\n  payload: movies,\n}));\n\nexport const updateMoviesList = createAction(ActionType.UPDATE_MOVIES_LIST, (movie) => ({\n  payload: movie,\n}));\n\nexport const loadPromoMovie = createAction(ActionType.LOAD_PROMO_MOVIE, (movie) => ({\n  payload: movie,\n}));\n\nexport const loadSimilarMovie = createAction(ActionType.LOAD_SIMILAR_MOVIES, (movies) => ({\n  payload: movies,\n}));\n\nexport const loadMovieReview = createAction(ActionType.LOAD_MOVIE_REVIEWS, (reviews) => ({\n  payload: reviews,\n}));\n\nexport const loadFavoriteMovies = createAction(ActionType.GET_FAVORITES, (movies) => ({\n  payload: movies,\n}));\n\nexport const requireAuthorization = createAction(ActionType.REQUIRED_AUTHORIZATION, (status) => ({\n  payload: status,\n}));\n\nexport const setUserAvatar = createAction(ActionType.SET_USER_AVATAR, (url) => ({\n  payload: url,\n}));\n\nexport const userLogout = createAction(ActionType.LOGOUT);\n\nexport const redirectToRoute = createAction(ActionType.REDIRECT_TO_ROUTE, (url) => ({\n  payload: url,\n}));\n\nexport const replaceRoute = createAction(ActionType.REPLACE_ROUTE, (url) => ({\n  payload: url,\n}));\n\nexport const uploadReview = createAction(ActionType.UPLOAD_REVIEW, (inProgress) => ({\n  payload: inProgress,\n}));\n\n","export const UserVerdicts = {\n  BAD: 'Bad',\n  NORMAL: 'Normal',\n  GOOD: 'Good',\n  VERY_GOOD: 'Very good',\n  AWESOME: 'Awesome',\n};\n\nexport const NetworkErrors = {\n  ERROR_1: 'Ошибка при загрузке данных о фильмах, пожалуйста, обновите страницу!',\n  ERROR_2: 'Ошибка при добавлении фильма в избранное',\n  ERROR_3: 'Сетевая ошибки при авторизации',\n  ERROR_4: 'Ошибка при авторизации пользователя',\n  ERROR_5: 'Ошибка при отправке обзора фильма',\n  ERROR_6: 'Пароль не может состоять из одних пробелов',\n  ERROR_7: 'Ошибка соединения с сетью, пожалуйста, обновите страницу!',\n  ERROR_8: 'Ошибка при загрузке промо-фильма, пожалуйста, обновите страницу!',\n  ERROR_9: 'Для добавления фильма в избранное необходимо зарегистрироваться на сайте!',\n};\n\nexport const FavoriteIndexes = {\n  ACTIVE: 1,\n  NON_ACTIVE: 0,\n};\n\nexport const INITIAL_GENRE = 'All genres';\n\nexport const AppRoute = {\n  ROOT: '/345491-what-to-watch-7/',\n  LOGIN: '/345491-what-to-watch-7/login',\n  MY_LIST: '/345491-what-to-watch-7/mylist',\n  FILM: '/345491-what-to-watch-7/films/:id',\n  FILM_REVIEW: '/345491-what-to-watch-7/films/:id/review',\n  FILM_PLAYER: '/345491-what-to-watch-7/player/:id',\n};\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const APIRoute = {\n  GET_ALL_FILMS: '/films',\n  GET_FILM: '/films',\n  GET_PROMO: '/promo',\n  GET_FAVORITE: '/favorite',\n  POST_FAVORITE: '/favorite',\n  GET_COMMENTS: '/comments',\n  POST_COMMENTS: '/comments',\n  POST_LOGIN: '/login',\n  GET_LOGIN: '/login',\n  DELETE_LOGIN: '/logout',\n};\n\nexport const isCheckedAuth = (authorizationStatus) =>\n  authorizationStatus !== AuthorizationStatus.UNKNOWN;\n","import {loadMoviesList, loadPromoMovie, loadSimilarMovie, loadMovieReview, requireAuthorization, userLogout, redirectToRoute, loadFavoriteMovies, replaceRoute, updateMoviesList, uploadReview, setUserAvatar} from './actions';\nimport {APIRoute, AuthorizationStatus, AppRoute} from '../components/utils/constants';\nimport { toast } from 'react-toastify';\n\nimport {NetworkErrors} from '../components/utils/constants';\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n};\n\nexport const fetchMoviesList = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.GET_ALL_FILMS)\n    .then(({data}) => dispatch(loadMoviesList(data)))\n    .catch((err) => toast.error(NetworkErrors.ERROR_1))\n);\n\nexport const fetchPromoMovie = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.GET_PROMO)\n    .then(({data}) => dispatch(loadPromoMovie(data)))\n    .catch((err) => toast.error(NetworkErrors.ERROR_8))\n);\n\nexport const fetchSimilarMovies = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.GET_ALL_FILMS}/${id}/similar`)\n    .then(({data}) => dispatch(loadSimilarMovie(data)))\n);\n\nexport const fetchMovieReviews = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.GET_COMMENTS}/${id}`)\n    .then(({data}) => dispatch(loadMovieReview(data)))\n);\n\nexport const fetchFavoriteMovies = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.GET_FAVORITE)\n    .then(({data}) => dispatch(loadFavoriteMovies(data)))\n);\n\nexport const postFavoriteMovie = (id, status, isPromo) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.POST_FAVORITE}/${id}/${status}`)\n    .then((favData) => {\n      isPromo ? dispatch(loadPromoMovie(favData.data)) : dispatch(updateMoviesList(favData.data));\n    })\n    .catch((err) => {\n      if (err.status !== HttpCode.UNAUTHORIZED) {\n        toast.warn(NetworkErrors.ERROR_9);\n      } else  {\n        toast.error(NetworkErrors.ERROR_2);\n      }\n    })\n);\n\nexport const checkAuth = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.GET_LOGIN)\n    .then(({data}) => {\n      dispatch(requireAuthorization(AuthorizationStatus.AUTH));\n      dispatch(setUserAvatar(data.avatar_url));\n    })\n    .catch((err) => {\n      if (err.response && err.response.status !== HttpCode.UNAUTHORIZED) {\n        toast.error(NetworkErrors.ERROR_3);\n      } else if (!err.response) {\n        toast.error(NetworkErrors.ERROR_7);\n      }\n    })\n);\n\nexport const login = ({login: email, password}) => (dispatch, _getState, api) => (\n  api.post(APIRoute.POST_LOGIN, {email, password})\n    .then(({data}) => {\n      localStorage.setItem('token', data.token);\n      dispatch(setUserAvatar(data.avatar_url));\n    })\n    .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n    .then(() => dispatch(replaceRoute(AppRoute.ROOT)))\n    .catch((err) => toast.error(NetworkErrors.ERROR_4))\n);\n\nexport const postReview = ({filmId, comment, rating}) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.POST_COMMENTS}/${filmId}`, {comment, rating})\n    .then(() => {\n      dispatch(redirectToRoute(`/345491-what-to-watch-7/films/${filmId}`));\n      dispatch(uploadReview(false));\n    })\n    .catch((err) => {\n      toast.error(NetworkErrors.ERROR_5);\n      dispatch(uploadReview(false));\n    })\n);\n\nexport const logout = () => (dispatch, _getState, api) => (\n  api.delete(APIRoute.DELETE_LOGIN)\n    .then(() => localStorage.removeItem('token'))\n    .then(() => dispatch(userLogout()))\n    .then(() => dispatch(replaceRoute(AppRoute.ROOT)))\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\n\nimport {fetchSimilarMovies, fetchMovieReviews} from '../../../store/api-actions';\n\nexport function SingleMovieCard(props) {\n  const {name, previewImage, id, onMouseHover} = props;\n\n  const dispatch = useDispatch();\n  const showSimilarAction = (ind) => {\n    dispatch(fetchSimilarMovies(ind));\n  };\n  const showReviewsAction = (ind) => {\n    dispatch(fetchMovieReviews(ind));\n  };\n\n  const handleActiveMovie = () => onMouseHover ? onMouseHover(id) : null;\n\n  const handleMovieClick = () => {\n    showSimilarAction(id);\n    showReviewsAction(id);\n  };\n\n  return (\n    <article className=\"small-film-card catalog__films-card\" onMouseOver = {handleActiveMovie} onClick = {handleMovieClick}>\n      <Link to={`/345491-what-to-watch-7/films/${id}`}>\n        <div className=\"small-film-card__image\">\n          <img src={previewImage} alt={name} width=\"280\" height=\"175\" />\n        </div>\n      </Link>\n      <h3 className=\"small-film-card__title\">\n        <Link to={`/345491-what-to-watch-7/films/${id}`} className=\"small-film-card__link\">{name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nSingleMovieCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onMouseHover: PropTypes.func,\n};\n\nexport default SingleMovieCard;\n\n\n","import PropTypes from 'prop-types';\n\nconst singleMovieProp = {\n  movieProps: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    previewImage: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default singleMovieProp;\n","import React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction VideoCard(props) {\n\n  const {previewImage, id, videoSourse, onCardHover = () => {}, onCardLeave = () => {}} = props;\n  const videoRef = useRef(null);\n  let playingTimeout;\n  const VIDEO_TIMEOUT = 1000;\n\n  const handleActiveMovie = () => {\n    onCardHover(id);\n    playingTimeout = setTimeout(() => {\n      videoRef && videoRef.current && videoRef.current.play();\n    }, VIDEO_TIMEOUT);\n  };\n\n  const handleStopActiveMovie = () => {\n    clearTimeout(playingTimeout);\n    onCardLeave();\n    videoRef.current.pause();\n  };\n\n  return (\n    <Link to={`/345491-what-to-watch-7/films/${id}`} className=\"small-film-card catalog__films-card\" >\n      <video ref = {videoRef} src = {videoSourse} poster = {previewImage} width=\"280\" height=\"175\" onMouseOver = {handleActiveMovie} onMouseLeave = {handleStopActiveMovie} onClick = {handleStopActiveMovie} muted className=\"small-film-card__image\">\n      </video>\n    </Link>\n  );\n}\n\nVideoCard.propTypes = {\n  previewImage: PropTypes.string.isRequired,\n  videoSourse: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onCardHover: PropTypes.func,\n  onCardLeave: PropTypes.func,\n};\n\nexport default VideoCard;\n","import React, {useState, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport SingleMovieCard from '../single-movie-card/single-movie-card';\nimport singleMovieProp from '../single-movie-card/single-movie.prop';\nimport VideoCard from  '../video-card/video-card';\nimport {fetchSimilarMovies, fetchMovieReviews} from '../../../store/api-actions';\n\nexport function MoviesList(props) {\n  const {allFilms} = props;\n\n  const [activeMovieID, setActiveMovieID] = useState(0);\n\n  const memoizedHandleMouseHover = useCallback(\n    (id) => {\n      setActiveMovieID(id);\n    },\n    [],\n  );\n\n  const handleMouseLeave = () => setActiveMovieID(0);\n\n  function getMovieCard(it, mouseOverHandler, mouseLeaveHandler) {\n    return (it.id !== activeMovieID) ? <SingleMovieCard name = {it.name} id = {it.id} previewImage = {it.previewImage} key = {it.id} onMouseHover = {mouseOverHandler}/> : <VideoCard name = {it.name} id = {it.id} previewImage = {it.previewImage} key = {it.id} videoSourse = {it.previewVideoLink} onCardHover = {mouseOverHandler} onCardLeave = {mouseLeaveHandler} handleClick = {() => {}}/>;\n  }\n\n  return (\n    <div className=\"catalog__films-list\">\n      {allFilms.map((it) => getMovieCard(it, memoizedHandleMouseHover, handleMouseLeave))}\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  allFilms: PropTypes.arrayOf(\n    singleMovieProp.movieProps,\n  ).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  showSimilarAction(id) {\n    dispatch(fetchSimilarMovies(id));\n  },\n  showReviewsAction(id) {\n    dispatch(fetchMovieReviews(id));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(MoviesList);\n","import React from 'react';\n\nexport default function ButtonImage() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n      <symbol id=\"add\" viewBox=\"0 0 19 20\">\n        <title>+</title>\n        <desc>Created with Sketch.</desc>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <polygon id=\"+\" fill=\"#EEE5B5\" points=\"10.777832 11.2880859 10.777832 19.5527344 8.41650391 19.5527344 8.41650391 11.2880859 0.627929688 11.2880859 0.627929688 8.92675781 8.41650391 8.92675781 8.41650391 0.662109375 10.777832 0.662109375 10.777832 8.92675781 18.5664062 8.92675781 18.5664062 11.2880859\"/>\n        </g>\n      </symbol>\n      <symbol id=\"full-screen\" viewBox=\"0 0 27 27\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23.8571 0H16V3.14286H23.8571V11H27V3.14286V0H23.8571Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27 23.8571V16H23.8571V23.8571H16V27H23.8571H27L27 23.8571Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 3.14286L0 11H3.14286L3.14286 3.14286L11 3.14286V0H3.14286H0L0 3.14286Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.14286 27H11V23.8571H3.14286L3.14286 16H0L0 23.8571V27H3.14286Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n      </symbol>\n      <symbol id=\"in-list\" viewBox=\"0 0 18 14\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.40513 5.35353L6.1818 8.90902L15.5807 0L18 2.80485L6.18935 14L0 8.17346L2.40513 5.35353Z\" fill=\"#EEE5B5\"/>\n      </symbol>\n      <symbol id=\"pause\" viewBox=\"0 0 14 21\">\n        <symbol id=\"play-s\" viewBox=\"0 0 19 19\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0L19 9.5L0 19V0Z\" fill=\"#EEE5B5\" />\n        </symbol>\n        <title>Artboard</title>\n        <desc>Created with Sketch.</desc>\n        <g id=\"Artboard\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <polygon id=\"Line\" fill=\"#EEE5B5\" fillRule=\"nonzero\" points=\"0 -1.11910481e-13 4 -1.11910481e-13 4 21 0 21\"/>\n          <polygon id=\"Line\" fill=\"#EEE5B5\" fillRule=\"nonzero\" points=\"10 -1.11910481e-13 14 -1.11910481e-13 14 21 10 21\"/>\n        </g>\n      </symbol>\n    </svg>\n  );\n}\n","import React from 'react';\n\nfunction Logo() {\n  return (\n    <>\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from '../logo/logo.jsx';\nimport {AppRoute} from '../../utils/constants';\n\nfunction PageFooter() {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Link to={AppRoute.ROOT} className=\"logo__link logo__link--light\">\n          <Logo/>\n        </Link>\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2021 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default PageFooter;\n","import { createSelector } from 'reselect';\n\nimport {INITIAL_GENRE} from '../../components/utils/constants';\n\nexport const getAuthorizationStatus = (state) => state.auth.authorizationStatus;\nexport const getUserImage = (state) => state.auth.userImage;\n\nexport const getPromoFilm = (state) => state.data.promoFilm;\nexport const getSimilarFilms = (state) => state.data.similarFilms;\nexport const getReviews = (state) => state.data.reviews;\nexport const getFavorites = (state) => state.data.favoriteMovies;\nexport const getUserReviewUploading = (state) => state.data.reviewUploading;\n\nexport const getAllFilms = (state) => state.movie.allFilms;\nexport const getDataLoaded = (state) => state.movie.isDataLoaded;\nexport const getCurrentGenre = (state) => state.movie.currentGenre;\nexport const getMoviesOnPage = (state) => state.movie.moviesOnPage;\n\nexport const createGenreMovieSelector = createSelector(\n  getAllFilms,\n  getCurrentGenre,\n  (films, genre) => (genre === INITIAL_GENRE) ? films : films.filter((it) => it.genre === genre),\n);\n\nconst LIMIT = 11;\n\nexport const createGenreSelector = createSelector(\n  getAllFilms,\n  (films) => {\n    const actualGenresAll = Array.of(INITIAL_GENRE).concat(films.map((it) => it.genre).filter((it, ind, arr) => arr.indexOf(it) === ind));\n    const actualGenres = actualGenresAll.slice(0, LIMIT);\n    return actualGenres;\n  },\n);\n\nexport const createShownMoviesSelector = createSelector(\n  getAllFilms,\n  getCurrentGenre,\n  getMoviesOnPage,\n  (films, genre, onPage) => genre === INITIAL_GENRE ? films.slice(0, onPage) : films.filter((it) => it.genre === genre).slice(0, onPage),\n);\n\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes, { string } from 'prop-types';\nimport {connect} from 'react-redux';\nimport {switchGenre} from '../../../store/actions';\n\nimport {getCurrentGenre, createGenreSelector} from '../../../store/selector/selector';\nimport './style.css';\n\nexport function GenresList(props) {\n  const {currentGenreProp, switchGenreAction, genresProp} = props;\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      {genresProp.map((it, ind) => (\n        <li className= {classNames('catalog__genres-item', { 'catalog__genres-item--active': it === currentGenreProp })} key = {it} id = {it}>\n          <a href = {`/345491-what-to-watch-7/#${it}`} className=\"catalog__genres-link\"  onClick = {() => switchGenreAction(it)}>{it}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nGenresList.propTypes = {\n  currentGenreProp: PropTypes.string.isRequired,\n  switchGenreAction: PropTypes.func.isRequired,\n  genresProp: PropTypes.arrayOf(string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  currentGenreProp: getCurrentGenre(state),\n  genresProp: createGenreSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  switchGenreAction(genre) {\n    dispatch(switchGenre(genre));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenresList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ShowMore(props) {\n\n  return (\n    <div className=\"catalog__more\">\n      {props.children}\n    </div>\n  );\n}\n\nShowMore.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ShowMore;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {AuthorizationStatus} from '../../utils/constants';\nimport {logout} from '../../../store/api-actions';\nimport {AppRoute} from '../../utils/constants';\nimport {getAuthorizationStatus, getUserImage} from '../../../store/selector/selector';\n\nexport function AuthBlock(props) {\n  const {authorizationStatusStateProp, userImageStateProp = '', onLogoutAction} = props;\n\n  const handleClick = () => {\n    onLogoutAction();\n  };\n\n  return ( authorizationStatusStateProp === AuthorizationStatus.AUTH ?\n    (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\">\n            <Link to={AppRoute.MY_LIST}>\n              <img src={userImageStateProp} alt=\"User avatar\" width=\"63\" height=\"63\" />\n            </Link>\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <Link to={AppRoute.ROOT} className=\"user-block__link\" onClick = {handleClick}>\n            Sign Out\n          </Link>\n        </li>\n      </ul>\n    ) : (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <Link to={AppRoute.LOGIN} className=\"user-block__link\">\n            Sign In\n          </Link>\n        </li>\n      </ul>\n    )\n  );\n}\n\nAuthBlock.propTypes = {\n  authorizationStatusStateProp: PropTypes.string.isRequired,\n  onLogoutAction: PropTypes.func.isRequired,\n  userImageStateProp: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatusStateProp: getAuthorizationStatus(state),\n  userImageStateProp: getUserImage(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogoutAction() {\n    dispatch(logout());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthBlock);\n","import React, {useEffect}  from 'react';\nimport { Link } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport MoviesList from '../../common-blocks/movies-list/movies-list';\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport Logo from '../../common-blocks/logo/logo.jsx';\nimport PageFooter from '../../common-blocks/page-footer/page-footer.jsx';\nimport GenresList from '../../common-blocks/genres-list/genres-list';\nimport ShowMore from '../../common-blocks/show-more/show-more';\nimport AuthBlock from '../../common-blocks/auth-block/auth-block';\nimport {showMoreMovies, resetMoviesList} from '../../../store/actions';\nimport {postFavoriteMovie} from '../../../store/api-actions';\nimport {createGenreMovieSelector, createShownMoviesSelector, getMoviesOnPage, getPromoFilm, getAuthorizationStatus} from '../../../store/selector/selector';\nimport {AppRoute, FavoriteIndexes, AuthorizationStatus} from '../../utils/constants';\nimport './main-page.css';\n\nexport function MainPage(props) {\n\n  const dispatch = useDispatch();\n  const postFavoriteAction = (id, status) => {\n    dispatch(postFavoriteMovie(id, status, true));\n  };\n  const showMoreAction = () => {\n    dispatch(showMoreMovies());\n  };\n  const resetMoviesListAction = () => {\n    dispatch(resetMoviesList());\n  };\n\n  const currentFilmsProp = useSelector(createGenreMovieSelector);\n  const shownFilmsProp = useSelector(createShownMoviesSelector);\n  const moviesOnPageProp = useSelector(getMoviesOnPage);\n  const promoInfo = useSelector(getPromoFilm);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const handleShowMoreClick = () => {\n    showMoreAction();\n  };\n\n  useEffect(() => {\n    resetMoviesListAction();\n  },\n  []);\n\n  const handleFavoriteClick = () => {\n    const isFavorite = promoInfo.isFavorite ? FavoriteIndexes.NON_ACTIVE : FavoriteIndexes.ACTIVE;\n    postFavoriteAction(promoInfo.id, isFavorite);\n  };\n\n  return (\n    <>\n      <div className=\"visually-hidden\">\n        <ButtonImage/>\n      </div>\n\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={promoInfo.backgroundImage} alt={promoInfo.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <div className=\"logo\">\n            <a href = {AppRoute.ROOT} className=\"logo__link\">\n              <Logo/>\n            </a>\n          </div>\n          <AuthBlock/>\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promoInfo.posterImage} alt={`${promoInfo.name} poster`} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promoInfo.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promoInfo.genre}</span>\n                <span className=\"film-card__year\">{promoInfo.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link className=\"film-card__button button-caption\" to={`/345491-what-to-watch-7/player/${promoInfo.id}`}>\n                  <button className=\"btn btn--play film-card__button\" type=\"button\">\n                    <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                      <use xlinkHref=\"#play-s\"></use>\n                    </svg>\n                    <span>Play</span>\n                  </button>\n                </Link>\n\n                <button className=\"btn btn--list film-card__button\" type=\"button\" onClick = {handleFavoriteClick}>\n                  {(!promoInfo.isFavorite|| authorizationStatus !== AuthorizationStatus.AUTH) ?\n                    <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                      <use xlinkHref=\"#add\"></use>\n                    </svg> :\n                    <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                      <use xlinkHref=\"#in-list\"></use>\n                    </svg>}\n                  <span className=\"film-card__caption\">My list</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n          <GenresList/>\n          <MoviesList allFilms = {shownFilmsProp}/>\n          <ShowMore>\n            {(moviesOnPageProp < currentFilmsProp.length) ? <button className=\"catalog__button\" type=\"button\" onClick = {handleShowMoreClick}>Show more</button> : null}\n          </ShowMore>\n        </section>\n        <PageFooter/>\n      </div>\n    </>\n  );\n}\n\nexport default MainPage;\n\n","import React, {useRef} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport Logo from '../../common-blocks/logo/logo.jsx';\nimport PageFooter from '../../common-blocks/page-footer/page-footer.jsx';\nimport {login} from '../../../store/api-actions';\nimport {AppRoute, AuthorizationStatus} from '../../utils/constants';\nimport {getAuthorizationStatus} from '../../../store/selector/selector';\nimport { toast } from 'react-toastify';\nimport {NetworkErrors} from '../../utils/constants';\n\nexport function SignIn(props) {\n\n  const {onSubmitAction, authorizationStatusStateProp} = props;\n\n  const loginRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (/[^\\s]/.test(passwordRef.current.value))\n    {\n      onSubmitAction({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n    } else {\n      toast.error(NetworkErrors.ERROR_6);\n    }\n  };\n\n  return (\n    authorizationStatusStateProp === AuthorizationStatus.AUTH\n      ? <Redirect to={AppRoute.ROOT} /> :\n      <>\n        <div className=\"visually-hidden\">\n          <ButtonImage/>\n        </div>\n\n        <div className=\"user-page\">\n          <header className=\"page-header user-page__head\">\n            <div className=\"logo\">\n              <Link to={AppRoute.ROOT} className=\"logo__link\">\n                <Logo/>\n              </Link>\n            </div>\n\n            <h1 className=\"page-title user-page__title\">Sign in</h1>\n          </header>\n\n          <div className=\"sign-in user-page__content\">\n            <form action=\"#\" className=\"sign-in__form\" onSubmit={handleSubmit}>\n              <div className=\"sign-in__fields\">\n                <div className=\"sign-in__field\">\n                  <input className=\"sign-in__input\" type=\"email\" placeholder=\"Email address\" name=\"user-email\" id=\"user-email\" ref={loginRef}/>\n                  <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n                </div>\n                <div className=\"sign-in__field\">\n                  <input className=\"sign-in__input\" type=\"password\" placeholder=\"Password\" name=\"user-password\" id=\"user-password\" ref={passwordRef}/>\n                  <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n                </div>\n              </div>\n              <div className=\"sign-in__submit\">\n                <button className=\"sign-in__btn\" type=\"submit\">Sign in</button>\n              </div>\n            </form>\n          </div>\n\n          <PageFooter/>\n        </div>\n      </>\n  );\n}\n\nSignIn.propTypes = {\n  onSubmitAction: PropTypes.func.isRequired,\n  authorizationStatusStateProp: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatusStateProp: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmitAction(authData) {\n    dispatch(login(authData));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport Logo from '../../common-blocks/logo/logo.jsx';\nimport PageFooter from '../../common-blocks/page-footer/page-footer.jsx';\nimport SingleMovieCard from '../../common-blocks/single-movie-card/single-movie-card';\nimport AuthBlock from '../../common-blocks/auth-block/auth-block';\nimport {getFavorites, getAuthorizationStatus} from '../../../store/selector/selector';\nimport {fetchFavoriteMovies} from '../../../store//api-actions';\nimport {AuthorizationStatus, AppRoute} from '../../utils/constants';\n\nfunction MyList() {\n\n  const allFilms = useSelector(getFavorites);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const dispatch = useDispatch();\n  const loadFavoriteMoviesAction = () => {\n    dispatch(fetchFavoriteMovies());\n  };\n\n  useEffect(() => {\n    if (authorizationStatus === AuthorizationStatus.AUTH) {\n      loadFavoriteMoviesAction();\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"visually-hidden\">\n        <ButtonImage/>\n      </div>\n\n      <div className=\"user-page\">\n        <header className=\"page-header user-page__head\">\n          <div className=\"logo\">\n            <Link to={AppRoute.ROOT} className=\"logo__link\">\n              <Logo/>\n            </Link>\n          </div>\n\n          <h1 className=\"page-title user-page__title\">My list</h1>\n          <AuthBlock/>\n        </header>\n\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <div className=\"catalog__films-list\">\n            {allFilms.map((it) => (<SingleMovieCard id = {it.id} previewImage = {it.previewImage} name = {it.name} key={it.id}/>))}\n          </div>\n        </section>\n\n        <PageFooter/>\n      </div>\n    </>\n  );\n}\n\nexport default MyList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './not-found-page.css';\nimport {AppRoute} from '../../utils/constants';\n\nfunction NotFoundScreen() {\n  return (\n    <section className = \"not-found__main-overlay\">\n      <h1 className = 'not-found_header'>Page not found</h1>\n      <h2 className = 'not-found_header'>Запрашиваемая вами страница не найдена</h2>\n      <Link className = 'not-found__link' to={AppRoute.ROOT}>Вернуться на главную</Link>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {getScoreEvaluation} from '../../utils/functions';\n\nfunction OverviewTab(props) {\n  const {currentMovie} = props;\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{currentMovie.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getScoreEvaluation(currentMovie.rating)}</span>\n          <span className=\"film-rating__count\">{currentMovie.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{currentMovie.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {currentMovie.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {currentMovie.starring.join(', ')}</strong></p>\n      </div>\n    </>\n  );\n}\n\nOverviewTab.propTypes = {\n  currentMovie: PropTypes.shape({\n    description: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    scoresCount: PropTypes.number.isRequired,\n    director: PropTypes.string.isRequired,\n    starring: PropTypes.arrayOf(\n      PropTypes.string.isRequired,\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default OverviewTab;\n","import {UserVerdicts} from './constants';\n\nexport function getScoreEvaluation(score) {\n  let verdict = '';\n\n  if (score < 3) {\n    verdict = UserVerdicts.BAD;\n  }\n  else if (score >= 3 && score < 5) {\n    verdict = UserVerdicts.NORMAL;\n  }\n  else if (score >= 5 && score < 8) {\n    verdict = UserVerdicts.GOOD;\n  }\n  else if (score >= 8 && score < 10) {\n    verdict = UserVerdicts.VERY_GOOD;\n  } else {\n    verdict = UserVerdicts.AWESOME;\n  }\n\n  return verdict;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction DetailTab(props) {\n  const {currentMovie} = props;\n\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{currentMovie.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">\n            {currentMovie.starring.map((it) => <span key = {it}>{it}<br/></span>)}\n          </span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{currentMovie.runTime}m</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{currentMovie.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{currentMovie.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nDetailTab.propTypes = {\n  currentMovie: PropTypes.shape({\n    director: PropTypes.string.isRequired,\n    starring: PropTypes.arrayOf(\n      PropTypes.string.isRequired,\n    ).isRequired,\n    runTime: PropTypes.number.isRequired,\n    genre: PropTypes.string.isRequired,\n    released: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default DetailTab;\n","import React, {useEffect} from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getReviews} from '../../../store/selector/selector';\nimport {fetchMovieReviews} from '../../../store/api-actions';\n\nfunction renderReviews(reviews) {\n\n  return reviews.map((it) => (\n    <div className=\"review\" key = {it.id}>\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{it.comment}</p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{it.user.name}</cite>\n          <time className=\"review__date\" dateTime=\"2016-12-24\">\n            <Moment format=\"MMMM DD, YYYY\">\n              {it.date}\n            </Moment>\n          </time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{it.rating}</div>\n    </div>\n  ));\n}\n\nexport function ReviewTab(props) {\n\n  const {currentMovie} = props;\n\n  const dispatch = useDispatch();\n  const showReviewsAction = (id) => {\n    dispatch(fetchMovieReviews(id));\n  };\n\n  const reviews = useSelector(getReviews);\n\n  useEffect(() => {\n    showReviewsAction(currentMovie.id);\n  },\n  [currentMovie]);\n\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {renderReviews(reviews)}\n      </div>\n    </div>\n  );\n}\n\nReviewTab.propTypes = {\n  currentMovie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default ReviewTab;\n\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport OverviewTab from './overview-tab';\nimport DetailTab from './detail-tab';\nimport ReviewTab from './review-tab';\nimport './style.css';\n\nconst availableOptions = ['Overview', 'Details', 'Reviews'];\n\nfunction MoviesTabs(props) {\n  const {currentMovie} = props;\n  const [activeOptionIndex, setActiveOption] = useState(0);\n\n  function renderMovieOptions() {\n\n    return availableOptions.map((it, ind) => (\n      <li className= {classNames('film-nav__item', { 'film-nav__item--active': ind === activeOptionIndex })} key = {it} onClick = {() => setActiveOption(ind)} id = {it}>\n        <span className=\"film-nav__link\">{it}</span>\n      </li>\n    ));\n  }\n\n  function getActualTab (tabIndex) {\n    switch (tabIndex) {\n      case 0:\n        return <OverviewTab currentMovie = {currentMovie}/>;\n      case 1:\n        return <DetailTab currentMovie = {currentMovie}/>;\n      case 2:\n        return <ReviewTab currentMovie = {currentMovie}/>;\n      default:\n        return 'Error occured';\n    }\n  }\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          {renderMovieOptions()}\n        </ul>\n      </nav>\n      {getActualTab(activeOptionIndex)}\n    </div>\n  );\n}\n\nMoviesTabs.propTypes = {\n  currentMovie: PropTypes.shape({\n    description: PropTypes.string,\n    rating: PropTypes.number,\n    scoresCount: PropTypes.number,\n    director: PropTypes.string,\n    starring: PropTypes.arrayOf(\n      PropTypes.string,\n    ),\n  }),\n};\n\nexport default MoviesTabs;\n\n","import React, {useEffect} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport Logo from '../../common-blocks/logo/logo.jsx';\nimport PageFooter from '../../common-blocks/page-footer/page-footer.jsx';\nimport NotFoundScreen from '../not-found-page/not-found-page.jsx';\nimport MoviesList from '../../common-blocks/movies-list/movies-list';\nimport MoviesTabs from '../../common-blocks/movie-tabs/movie-tabs';\nimport singleMovieProp from '../../common-blocks/single-movie-card/single-movie.prop';\nimport AuthBlock from '../../common-blocks/auth-block/auth-block';\nimport {fetchSimilarMovies, fetchMovieReviews, postFavoriteMovie, fetchFavoriteMovies} from '../../../store/api-actions';\nimport {AuthorizationStatus, FavoriteIndexes, AppRoute} from '../../utils/constants';\nimport {getSimilarFilms, getAuthorizationStatus} from '../../../store/selector/selector';\nimport './movie-page.css';\n\nexport function MoviePage(props) {\n  const params = useParams();\n  const {allFilms} = props;\n  const currentMovie = allFilms.find((it) => Number(it.id) === Number(params.id));\n\n  const similarFilms = useSelector(getSimilarFilms);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const dispatch = useDispatch();\n  const showSimilarAction = (id) => {\n    dispatch(fetchSimilarMovies(id));\n  };\n  const showReviewsAction = (id) => {\n    dispatch(fetchMovieReviews(id));\n  };\n  const postFavoriteAction = (id, status) => {\n    dispatch(postFavoriteMovie(id, status, false));\n  };\n  const loadFavoriteMoviesAction = () => {\n    dispatch(fetchFavoriteMovies());\n  };\n\n  useEffect(() => {\n    showSimilarAction(params.id);\n    showReviewsAction(params.id);\n  }, [params.id]);\n\n  const handleFavoriteClick = () => {\n    const isFavorite = currentMovie.isFavorite ? FavoriteIndexes.NON_ACTIVE : FavoriteIndexes.ACTIVE;\n    postFavoriteAction(currentMovie.id, isFavorite);\n    loadFavoriteMoviesAction();\n  };\n\n  return (currentMovie) ? (\n    <>\n      <div className=\"visually-hidden\">\n        <ButtonImage currentMovie = {currentMovie}/>\n      </div>\n\n      <section className=\"film-card film-card--full\" style = {{background: currentMovie.backgroundColor}}>\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={currentMovie.backgroundImage} alt={currentMovie.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <div className=\"logo\">\n              <Link to={AppRoute.ROOT} className=\"logo__link\">\n                <Logo/>\n              </Link>\n            </div>\n            <AuthBlock/>\n          </header>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{currentMovie.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{currentMovie.genre}</span>\n                <span className=\"film-card__year\">{currentMovie.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link className=\"film-card__button button-caption\" to={`/345491-what-to-watch-7/player/${params.id}`}>\n                  <button className=\"btn btn--play film-card__button\" type=\"button\">\n                    <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                      <use xlinkHref=\"#play-s\"></use>\n                    </svg>\n                    <span className = 'button-caption'>Play</span>\n                  </button>\n                </Link>\n                <button className=\"btn btn--list film-card__button\" type=\"button\" onClick = {handleFavoriteClick}>\n                  {(!currentMovie.isFavorite || authorizationStatus !== AuthorizationStatus.AUTH) ?\n                    <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                      <use xlinkHref=\"#add\"></use>\n                    </svg> :\n                    <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                      <use xlinkHref=\"#in-list\"></use>\n                    </svg>}\n                  <span>My list</span>\n                </button>\n                {authorizationStatus === AuthorizationStatus.AUTH ?\n                  <Link to={`/345491-what-to-watch-7/films/${params.id}/review`} className=\"btn film-card__button\">\n                    Add review\n                  </Link> : null}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={currentMovie.posterImage} alt={currentMovie.name} width=\"218\" height=\"327\" />\n            </div>\n            {currentMovie ? <MoviesTabs currentMovie={currentMovie}/> : null}\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n\n          <div className=\"catalog__films-list\">\n            <MoviesList allFilms = {similarFilms}/>\n          </div>\n        </section>\n        <PageFooter/>\n      </div>\n    </>\n  ) : <NotFoundScreen/>;\n}\n\nMoviePage.propTypes = {\n  allFilms: PropTypes.arrayOf(\n    singleMovieProp.movieProps,\n  ).isRequired,\n};\n\nexport default MoviePage;\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {postReview} from '../../../../store/api-actions';\nimport {uploadReview} from '../../../../store/actions';\nimport {getUserReviewUploading} from '../../../../store/selector/selector';\n\nconst dumbRatingIDs = Array.from(Array(10).keys()).reverse();\n\nexport default function ReviewForm(props) {\n  const {id} = props;\n  const MIN_SYMBOLS_COUNT = 50;\n  const MAX_SYMBOLS_COUNT = 400;\n  const MIN_RATING = 0;\n  const MAX_RATING = 10;\n\n  const [userReview, setUserReview] = useState({\n    rating: 0,\n    comment: '',\n  });\n\n  const dispatch = useDispatch();\n  const postReviewAction = (rev) => {\n    dispatch(postReview(rev));\n  };\n  const uploadReviewAction = (isUploadInProgress) => {\n    dispatch(uploadReview(isUploadInProgress));\n  };\n\n  const isReviewUploading = useSelector(getUserReviewUploading);\n\n  const reviewState = {\n    filmId: id,\n    comment: userReview.comment,\n    rating: userReview.rating,\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    postReviewAction(reviewState);\n    uploadReviewAction(true);\n  };\n\n  const handleUserMessage = (evt) => {\n    setUserReview((prevState) => ({\n      ...prevState,\n      comment: evt.target.value,\n    }));\n  };\n\n  const handleUserRating = (evt) => {\n    setUserReview((prevState) => ({\n      ...prevState,\n      rating: evt.target.value,\n    }));\n  };\n\n  const renderRatingList = (it) => (\n    <React.Fragment key={it}>\n      <input className=\"rating__input\" id={`star-${it}`} type=\"radio\" name=\"rating\" value={it} onChange = {handleUserRating} disabled = {isReviewUploading}/>\n      <label className=\"rating__label\" htmlFor={`star-${it}`}>Rating {it}</label>\n    </React.Fragment>\n  );\n\n  const checkValidForm = () => {\n    const isMessageValid = (userReview.comment.length >= MIN_SYMBOLS_COUNT && userReview.comment.length <= MAX_SYMBOLS_COUNT);\n    const isRatingValid = userReview.rating > MIN_RATING && userReview.rating <= MAX_RATING;\n\n    return isMessageValid && isRatingValid && !isReviewUploading;\n  };\n\n  return (\n    <form action=\"#\" className=\"add-review__form\" onSubmit = {handleSubmit}>\n      <div className=\"rating\">\n        <div className=\"rating__stars\">\n          {dumbRatingIDs.map((it) => renderRatingList(it + 1))}\n        </div>\n      </div>\n\n      <div className=\"add-review__text\">\n        <textarea\n          className=\"add-review__textarea\"\n          name=\"review-text\" id=\"review-text\"\n          placeholder=\"Review text\"\n          value={userReview.comment}\n          onChange = {handleUserMessage}\n          minLength = {MIN_SYMBOLS_COUNT}\n          maxLength = {MAX_SYMBOLS_COUNT}\n          disabled = {isReviewUploading}\n        >\n        </textarea>\n        <div className=\"add-review__submit\">\n          <button\n            className=\"add-review__btn\"\n            type=\"submit\"\n            disabled = {!checkValidForm()}\n          >\n              Post\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nReviewForm.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport Logo from '../../common-blocks/logo/logo.jsx';\nimport NotFoundScreen from '../not-found-page/not-found-page.jsx';\nimport ReviewForm from './review-form/review-form';\nimport AuthBlock from '../../common-blocks/auth-block/auth-block';\nimport {AppRoute} from '../../utils/constants';\n\nfunction ReviewPage(props) {\n  const params = useParams();\n  const {allFilms} = props;\n  const currentMovie = allFilms.find((it) => Number(it.id) === Number(params.id));\n\n  return currentMovie ? (\n    <>\n      <div className=\"visually-hidden\">\n        <ButtonImage/>\n      </div>\n\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__header\">\n          <div className=\"film-card__bg\">\n            <img src={currentMovie.backgroundImage} alt={currentMovie.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header\">\n            <div className=\"logo\">\n              <Link to={AppRoute.ROOT} className=\"logo__link\">\n                <Logo/>\n              </Link>\n            </div>\n\n            <nav className=\"breadcrumbs\">\n              <ul className=\"breadcrumbs__list\">\n                <li className=\"breadcrumbs__item\">\n                  <a href={`/345491-what-to-watch-7/films/${currentMovie.id}`} className=\"breadcrumbs__link\">{currentMovie.name}</a>\n                </li>\n                <li className=\"breadcrumbs__item\">\n                  <span className=\"breadcrumbs__link\">Add review</span>\n                </li>\n              </ul>\n            </nav>\n            <AuthBlock/>\n          </header>\n\n          <div className=\"film-card__poster film-card__poster--small\">\n            <img src={currentMovie.posterImage} alt={`${currentMovie.name} poster`} width=\"218\" height=\"327\" />\n          </div>\n        </div>\n\n        <div className=\"add-review\">\n          <ReviewForm id = {Number(params.id)}/>\n        </div>\n\n      </section>\n    </>\n  ): <NotFoundScreen/>;\n}\n\nReviewPage.propTypes = {\n  allFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ReviewPage;\n","import React, {useRef, useState, useEffect} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport ButtonImage from '../../common-blocks/button-image/button-image.jsx';\nimport NotFoundScreen from '../not-found-page/not-found-page.jsx';\nimport MoonLoader from 'react-spinners/MoonLoader';\nimport {AppRoute} from '../../utils/constants';\nimport './player.css';\n\nexport default function Player(props) {\n  const params = useParams();\n  const {allFilms} = props;\n  const currentMovie = allFilms.find((it) => Number(it.id) === Number(params.id));\n\n  const videoRef = useRef(null);\n  const progressBarRef = useRef(null);\n  const togglerRef = useRef(null);\n\n  const MINUTE = 60;\n  const HOUR = 3600;\n\n  const [playerState, setPlayerState] = useState({\n    playing: false,\n    elapsedTime: 0,\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    videoRef.current.onloadeddata = () => setPlayerState((prevState) => ({\n      ...prevState,\n      isLoading: false,\n    }));\n  }, [videoRef]);\n\n  const handlePlayingClick = () => {\n    if (videoRef.current.paused) {\n      videoRef.current.play();\n      setPlayerState((prevState) => ({\n        ...prevState,\n        playing: true,\n      }));\n    } else {\n      videoRef.current.pause();\n      setPlayerState((prevState) => ({\n        ...prevState,\n        playing: false,\n      }));\n    }\n  };\n\n  const updateProgressBar = () => {\n    progressBarRef.current.value = videoRef.current ? ((videoRef.current.currentTime / videoRef.current.duration) * 100) : 0;\n\n    const inSeconds = Math.floor(videoRef.current.duration - videoRef.current.currentTime);\n\n    const actualDuration = (videoRef.current.duration > HOUR) ? `${Math.floor(inSeconds / HOUR)}:${Math.floor((inSeconds % HOUR) / MINUTE)}:${((inSeconds % (HOUR * MINUTE)))}` : `${Math.floor(inSeconds / MINUTE)}:${(inSeconds % MINUTE)}`;\n\n    togglerRef.current.style.left = `${videoRef.current ? ((videoRef.current.currentTime / videoRef.current.duration) * 100) : 0}%`;\n\n    setPlayerState((prevState) => ({\n      ...prevState,\n      elapsedTime:  `-${actualDuration}`,\n    }));\n  };\n\n  const handleFullScreenMode = () => {\n    if (videoRef.current) {\n      videoRef.current.fullscreen ? videoRef.current.exitFullscreen() : videoRef.current.requestFullscreen();\n    }\n  };\n\n  return currentMovie ? (\n    <>\n      <MoonLoader loading={playerState.isLoading} className ='player__loader' size={150} color={'green'} />\n      <div className=\"visually-hidden\">\n        <ButtonImage/>\n      </div>\n\n      <div className=\"player\">\n        <video ref = {videoRef} src = {currentMovie.videoLink} className=\"player__video\" poster={currentMovie.backgroundImage} onTimeUpdate = {updateProgressBar}></video>\n        <Link to={AppRoute.ROOT}>\n          <button type=\"button\" className=\"player__exit\" onClick = {() => videoRef.current.pause()}>Exit</button>\n        </Link>\n\n        <div className=\"player__controls\">\n          <div className=\"player__controls-row\">\n            <div className=\"player__time\">\n              <progress ref = {progressBarRef} className=\"player__progress\" max=\"100\"></progress>\n              <div ref = {togglerRef} className=\"player__toggler\">Toggler</div>\n            </div>\n            <div className=\"player__time-value\">{videoRef.current ? playerState.elapsedTime : ''}</div>\n          </div>\n\n          <div className=\"player__controls-row\">\n            <button type=\"button\" className=\"player__play\" onClick = {handlePlayingClick}>\n              {!playerState.playing ?\n                <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                  <use xlinkHref=\"#play-s\"></use>\n                </svg> :\n                <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                  <use xlinkHref=\"#pause\"></use>\n                </svg>}\n              <span>{!playerState.playing ? 'Play' : 'Pause'}</span>\n            </button>\n            <div className=\"player__name\">{currentMovie.name}</div>\n\n            <button type=\"button\" className=\"player__full-screen\" onClick = {handleFullScreenMode}>\n              <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n                <use xlinkHref=\"#full-screen\"></use>\n              </svg>\n              <span>Full screen</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  ) : <NotFoundScreen/>;\n}\n\nPlayer.propTypes = {\n  allFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport MoonLoader from 'react-spinners/MoonLoader';\n\nimport './loading-screen.css';\n\nfunction LoadingScreen() {\n  return (\n    <div className = 'loading__main-overlay'>\n      <h3 className = 'loading__text'>Loading...</h3>\n      <MoonLoader className = 'loading__spinner' loading size={150} color={'green'} />\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {useSelector} from 'react-redux';\n\nimport {AuthorizationStatus} from '../../utils/constants';\nimport {getAuthorizationStatus} from '../../../store/selector/selector';\nimport {AppRoute} from '../../utils/constants';\n\nfunction PrivateRoute ({render, path, exact}) {\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render(routeProps)\n          : <Redirect to={AppRoute.LOGIN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport MainPage from '../pages/main-page/main-page.jsx';\nimport SignIn from '../pages/sign-in/sign-in.jsx';\nimport MyList from '../pages/my-list/my-list.jsx';\nimport MoviePage from '../pages/movie-page/movie-page.jsx';\nimport ReviewPage from '../pages/review-page/review-page.jsx';\nimport Player from '../pages/player/player.jsx';\nimport NotFoundScreen from '../pages/not-found-page/not-found-page.jsx';\nimport {AppRoute, isCheckedAuth} from '../utils/constants';\nimport LoadingScreen from '../common-blocks/loading-screen/loading-screen';\nimport PrivateRoute from '../common-blocks/private-route/private-route';\nimport {getAllFilms, getDataLoaded, getAuthorizationStatus} from '../../store/selector/selector';\n\nfunction App() {\n\n  const allFilms = useSelector(getAllFilms);\n  const isDataLoaded = useSelector(getDataLoaded);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  if (!isDataLoaded || !isCheckedAuth(authorizationStatus)) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path = {AppRoute.ROOT} exact render={() => <MainPage/>}/>\n      <Route path = {AppRoute.LOGIN} exact render={() => <SignIn/>}/>\n      <PrivateRoute exact path={AppRoute.MY_LIST} render={() => (<MyList/>)}/>\n      <Route path = {AppRoute.FILM} exact>\n        <MoviePage allFilms = {allFilms}/>\n      </Route>\n      <PrivateRoute exact path={AppRoute.FILM_REVIEW} render={() => (<ReviewPage allFilms = {allFilms}/>)}/>\n      <Route path = {AppRoute.FILM_PLAYER} exact>\n        <Player allFilms = {allFilms}/>\n      </Route>\n      <Route>\n        <NotFoundScreen/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n};\n\nexport const createAPI = (onUnauthorized) => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  api.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem('token') ?? '';\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n      return config;\n    },\n    (error) => Promise.reject(error),\n  );\n\n  return api;\n};\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import {ActionType} from '../actions';\nimport {AuthorizationStatus} from '../../components/utils/constants.js';\n\nconst initState = {\n  authorizationStatus: AuthorizationStatus.UNKNOWN,\n  userImage: '',\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ActionType.REQUIRED_AUTHORIZATION:\n      return {\n        ...state,\n        authorizationStatus: action.payload,\n      };\n    case ActionType.SET_USER_AVATAR:\n      return {\n        ...state,\n        userImage: action.payload,\n      };\n    case ActionType.LOGOUT:\n      return {\n        ...state,\n        authorizationStatus: AuthorizationStatus.NO_AUTH,\n        userImage: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {ActionType} from '../actions';\nimport camelize from 'camelize';\nimport {INITIAL_GENRE} from '../../components/utils/constants';\n\nconst INITIAL_MOVIES_COUNT = 8;\n\nconst initState = {\n  currentGenre: INITIAL_GENRE,\n  moviesOnPage: INITIAL_MOVIES_COUNT,\n  changedMovie: {},\n  allFilms: [],\n  isDataLoaded: false,\n};\n\nfunction updateMovies(movies, newMovie) {\n  const changedIndex = movies.findIndex((it) => it.id === newMovie.id);\n  const newList = movies.slice();\n  newList.splice(changedIndex, 1, newMovie);\n\n  return newList;\n}\n\nconst movieReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ActionType.SWITCH_GENRE:\n      return {\n        ...state,\n        currentGenre: action.payload.genre,\n      };\n    case ActionType.MORE_MOVIES:\n      return {\n        ...state,\n        moviesOnPage: state.moviesOnPage + INITIAL_MOVIES_COUNT,\n      };\n    case ActionType.RESET_MOVIES_LIST:\n      return {\n        ...state,\n        currentGenre: INITIAL_GENRE,\n        moviesOnPage: INITIAL_MOVIES_COUNT,\n      };\n    case ActionType.LOAD_MOVIES_LIST:\n      return {\n        ...state,\n        allFilms: camelize(action.payload),\n        isDataLoaded: true,\n      };\n    case ActionType.UPDATE_MOVIES_LIST:\n      return {\n        ...state,\n        changedMovie: camelize(action.payload),\n        allFilms: updateMovies(state.allFilms, camelize(action.payload)),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n","import {loadPromoMovie, loadSimilarMovie, loadMovieReview, loadFavoriteMovies, uploadReview} from '../actions';\nimport camelize from 'camelize';\nimport {createReducer} from '@reduxjs/toolkit';\n\nconst initState = {\n  promoFilm: {},\n  similarFilms: [],\n  reviews: [],\n  favoriteMovies: [],\n  reviewUploading: false,\n};\n\nconst dataReducer = createReducer(initState, (builder) => {\n  builder\n    .addCase(loadPromoMovie, (state, action) => {\n      state.promoFilm = camelize(action.payload);\n    })\n    .addCase(loadSimilarMovie, (state, action) => {\n      state.similarFilms = camelize(action.payload);\n    })\n    .addCase(loadMovieReview, (state, action) => {\n      state.reviews = camelize(action.payload);\n    })\n    .addCase(loadFavoriteMovies, (state, action) => {\n      state.favoriteMovies = camelize(action.payload);\n    })\n    .addCase(uploadReview, (state, action) => {\n      state.reviewUploading = action.payload;\n    });\n});\n\nexport default dataReducer;\n","import { combineReducers } from 'redux';\n\nimport authReducer from './auth-reducer';\nimport movieReducer from './movie-reducer';\nimport dataReducer from './data-reducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  data: dataReducer,\n  movie: movieReducer,\n});\n\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../actions';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n\nexport const replace = (_store) => (next) => (action) => {\n\n  if (action.type === ActionType.REPLACE_ROUTE) {\n    browserHistory.replace(action.payload);\n  }\n\n  return next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport {createAPI} from './api';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Router as BrowserRouter} from 'react-router-dom';\nimport browserHistory from './browser-history';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport rootReducer from './store/reducer/root-reducer';\nimport {fetchMoviesList, fetchPromoMovie, checkAuth} from './store/api-actions';\nimport {requireAuthorization} from './store/actions';\nimport {AuthorizationStatus} from './components/utils/constants';\nimport {redirect, replace} from './store/middleware/redirect';\nimport './css/main.min.css';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect, replace),\n});\n\nstore.dispatch(checkAuth());\nstore.dispatch(fetchPromoMovie());\nstore.dispatch(fetchMoviesList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n      <BrowserRouter history={browserHistory}>\n        <App/>\n        <ToastContainer\n          position=\"top-right\"\n          // autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}